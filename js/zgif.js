//zmachinejs
//Copyright (C) 2014 Robert Prestezog
//
//This program is free software; you can redistribute it and/or modify
//it under the terms of the GNU General Public License as published by
//the Free Software Foundation; either version 2 of the License, or
//(at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the GNU General Public License along
//with this program; if not, write to the Free Software Foundation, Inc.,
//51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

ZGIF = {
    //this set of functions let's us take a font 3 character code and a foreground 
    //and produce an 8 by 8 pixel base64 encoded transparent GIF
    //using a data URI scheme
    'get_font_3_URI':function(code,foreground) {
	var fore_rgb = ZGIF.get_rgb(foreground);
	var bit_array = ZGIF.get_font_3_bit_array(code);
	var gif = ZGIF.bit_array_to_gif(bit_array,fore_rgb[0],fore_rgb[1],fore_rgb[2]);
	var base64_gif = ZGIF.base64_encode(gif);
	var URI = 'data:image/gif;base64,' + base64_gif;
	return URI;
    }
    ,
    'get_rgb':function(color) {
	if (color == 'white') {
	    return [255,255,255];
	} else if (color == 'black') {
	    return [0,0,0];
	} else if (color == 'red') {
	    return [255,0,0];
	} else if (color == 'green') {
	    return [0,255,0];
	} else if (color == 'blue') {
	    return [0,0,255];
	} else if (color == 'yellow') {
	    return [255,255,0];
	} else if (color == 'magenta') {
	    return [255,0,255];
	} else if (color == 'cyan') {
	    return [0,255,255];
	} else {
	    ZError.log('get_rgb color: ' + color);
	    return [128,128,128];
	}
    }
    ,
    'bit_array_to_gif':function(b,fore_r,fore_g,fore_b) {	
	var gif = [71, 73, 70, 56, 57, 97,       //GIF89a
		   8,0, //width (8)
		   8,0, //height (8)
		   128 +64+32+16,  //Global Color Map, 8bit color, 2 color pallete
		   0,   //background
		   0,
		   0,0,0, //background color would go here, if it wasn't going to be transparent
		   fore_r,fore_g,fore_b, //foreground
		   0x21, //introducing an Graphic Control Extension
		   0xF9, //label
		   4, //block size
		   1, //no disposal, no input, yes transparency
		   0,0, //no delay
		   0, //zero is the transparent color
		   0, //last block of the Graphic Control Extension
		   44, //comma, the image introducer
		   0,0,0,0, //upper left
		   8,0,8,0, //8 by 8 pixels
		   0, //no local color table
		   3, //LZW min code size
		   41, //41 bytes of image data 4/3
		   8+(b[0]<<4),b[1]+(b[2]<<4),b[3]+(8<<4),b[4]+(b[5]<<4),b[6]+(b[7]<<4), //row
		   8+(b[8]<<4),b[9]+(b[10]<<4),b[11]+(8<<4),b[12]+(b[13]<<4),b[14]+(b[15]<<4), //row
		   8+(b[16]<<4),b[17]+(b[18]<<4),b[19]+(8<<4),b[20]+(b[21]<<4),b[22]+(b[23]<<4), //row
		   8+(b[24]<<4),b[25]+(b[26]<<4),b[27]+(8<<4),b[28]+(b[29]<<4),b[30]+(b[31]<<4), //row
		   8+(b[32]<<4),b[33]+(b[34]<<4),b[35]+(8<<4),b[36]+(b[37]<<4),b[38]+(b[39]<<4), //row
		   8+(b[40]<<4),b[41]+(b[42]<<4),b[43]+(8<<4),b[44]+(b[45]<<4),b[46]+(b[47]<<4), //row
		   8+(b[48]<<4),b[49]+(b[50]<<4),b[51]+(8<<4),b[52]+(b[53]<<4),b[54]+(b[55]<<4), //row
		   8+(b[56]<<4),b[57]+(b[58]<<4),b[59]+(8<<4),b[60]+(b[61]<<4),b[62]+(b[63]<<4), //row
		   0x98, // 8 (clear, end)
		   0, //last block
		   59]; //semicolon
	return gif;
    }
    ,
    'base64_encode':function(bytes){
	var map = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
	var code = '';
	var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
	var i = 0;
	while (i < bytes.length) {
	    var three_bytes = bytes[i] << 16;
	    i++;
	    code += map.charAt((three_bytes >> 18) & 63);
      	    if (i < bytes.length) {
		three_bytes += (bytes[i] << 8);		
		i++;
		code += map.charAt((three_bytes >> 12) & 63);
		if (i < bytes.length) {
		    three_bytes += bytes[i];
		    i++;
		    code += map.charAt((three_bytes >> 6) & 63);
		    code += map.charAt(three_bytes & 63);
		} else {
		    code += map.charAt((three_bytes >> 6) & 63);
		    code += '=';
		}
	    } else {
		code += map.charAt((three_bytes >> 12) & 63);
		code += '==';
	    }
	}
	return code;
    }
    ,
    'get_font_3_bit_array':function(code) {
	if (code == 32) {
	    return [0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 33) {
	    return [0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,1,0,0,0,0,0,
		    0,1,1,0,0,0,0,0,
		    1,1,1,1,1,1,1,0,
		    0,1,1,0,0,0,0,0,
		    0,0,1,0,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 34) {
	    return [0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,1,0,0,
		    1,1,1,1,1,1,1,0,
		    0,0,0,0,1,1,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 35) {
	    return [0,0,0,0,0,0,0,1,
		    0,0,0,0,0,0,1,0,
		    0,0,0,0,0,1,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,1,0,0,0,0,0,
		    0,1,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0];
	} else if (code == 36) {
	    return [1,0,0,0,0,0,0,0,
		    0,1,0,0,0,0,0,0,
		    0,0,1,0,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,0,1,0,0,
		    0,0,0,0,0,0,1,0,
		    0,0,0,0,0,0,0,1];
	} else if (code == 37) {
	    return [0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 38) {
	    return [0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    1,1,1,1,1,1,1,1,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 39) {
	    return [0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    1,1,1,1,1,1,1,1,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 40) {
	    return [0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0];
	} else if (code == 41) {
	    return [0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0];
	} else if (code == 42) {
	    return [0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    1,1,1,1,1,1,1,1,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 43) {
	    return [0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    1,1,1,1,1,1,1,1,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0];
	} else if (code == 44) {
	    return [0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,1,1,1,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0];
	} else if (code == 45) {
	    return [0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    1,1,1,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0];
	} else if (code == 46) {
	    return [0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,1,1,1,1,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 47) {
	    return [0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0];
	} else if (code == 48) {
	    return [0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    1,1,1,1,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0];
	} else if (code == 49) {
	    return [0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 50) {
	    return [0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,1,1,1,1,
		    0,0,1,0,0,0,0,0,
		    0,1,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0];
	} else if (code == 51) {
	    return [1,0,0,0,0,0,0,0,
		    0,1,0,0,0,0,0,0,
		    0,0,1,0,0,0,0,0,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0];
	} else if (code == 52) {
	    return [0,0,0,0,0,0,0,1,
		    0,0,0,0,0,0,1,0,
		    0,0,0,0,0,1,0,0,
		    1,1,1,1,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0];
	} else if (code == 53) {
	    return [0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    0,0,0,0,0,1,0,0,
		    0,0,0,0,0,0,1,0,
		    0,0,0,0,0,0,0,1];
	} else if (code == 54) {
	    return [1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1];
	} else if (code == 55) {
	    return [1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 56) {
	    return [0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1];
	} else if (code == 57) {
	    return [1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0];
	} else if (code == 58) {
	    return [0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1];
	} else if (code == 59) {
	    return [0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1];
	} else if (code == 60) {
	    return [1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0];
	} else if (code == 61) {
	    return [1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0];
	} else if (code == 62) {
	    return [0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1];
	} else if (code == 63) {
	    return [0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 64) {
	    return [0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1];
	} else if (code == 65) {
	    return [0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0];
	} else if (code == 66) {
	    return [1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 67) {
	    return [0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,1,0,0,0,0,0,
		    0,1,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0];
	} else if (code == 68) {
	    return [1,0,0,0,0,0,0,0,
		    0,1,0,0,0,0,0,0,
		    0,0,1,0,0,0,0,0,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1,
		    0,0,0,1,1,1,1,1];
	} else if (code == 69) {
	    return [0,0,0,0,0,0,0,1,
		    0,0,0,0,0,0,1,0,
		    0,0,0,0,0,1,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0];
	} else if (code == 70) {
	    return [1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    0,0,0,0,0,1,0,0,
		    0,0,0,0,0,0,1,0,
		    0,0,0,0,0,0,0,1];
	} else if (code == 71) {
	    return [1,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 72) {
	    return [0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,1];
	} else if (code == 73) {
	    return [0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0];
	} else if (code == 74) {
	    return [0,0,0,0,0,0,0,1,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 75) {
	    return [1,1,1,1,1,1,1,1,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 76) {
	    return [0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    1,1,1,1,1,1,1,1];
	} else if (code == 77) {
	    return [1,0,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0];
	} else if (code == 78) {
	    return [0,0,0,0,0,0,0,1,
		    0,0,0,0,0,0,0,1,
		    0,0,0,0,0,0,0,1,
		    0,0,0,0,0,0,0,1,
		    0,0,0,0,0,0,0,1,
		    0,0,0,0,0,0,0,1,
		    0,0,0,0,0,0,0,1,
		    0,0,0,0,0,0,0,1];
	} else if (code == 79) {
	    return [0,0,0,0,0,0,0,0,
		    1,1,1,1,1,1,1,1,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0,
		    1,1,1,1,1,1,1,1,
		    0,0,0,0,0,0,0,0];
	} else if (code == 80) {
	    return [0,0,0,0,0,0,0,0,
		    1,1,1,1,1,1,1,1,
		    1,0,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0,
		    1,1,1,1,1,1,1,1,
		    0,0,0,0,0,0,0,0];
	} else if (code == 81) {
	    return [0,0,0,0,0,0,0,0,
		    1,1,1,1,1,1,1,1,
		    1,1,0,0,0,0,0,0,
		    1,1,0,0,0,0,0,0,
		    1,1,0,0,0,0,0,0,
		    1,1,0,0,0,0,0,0,
		    1,1,1,1,1,1,1,1,
		    0,0,0,0,0,0,0,0];
	} else if (code == 82) {
	    return [0,0,0,0,0,0,0,0,
		    1,1,1,1,1,1,1,1,
		    1,1,1,0,0,0,0,0,
		    1,1,1,0,0,0,0,0,
		    1,1,1,0,0,0,0,0,
		    1,1,1,0,0,0,0,0,
		    1,1,1,1,1,1,1,1,
		    0,0,0,0,0,0,0,0];
	} else if (code == 83) {
	    return [0,0,0,0,0,0,0,0,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,0,0,0,0,
		    1,1,1,1,0,0,0,0,
		    1,1,1,1,0,0,0,0,
		    1,1,1,1,0,0,0,0,
		    1,1,1,1,1,1,1,1,
		    0,0,0,0,0,0,0,0];
	} else if (code == 84) {
	    return [0,0,0,0,0,0,0,0,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,0,0,0,
		    1,1,1,1,1,1,1,1,
		    0,0,0,0,0,0,0,0];
	} else if (code == 85) {
	    return [0,0,0,0,0,0,0,0,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,0,0,
		    1,1,1,1,1,1,0,0,
		    1,1,1,1,1,1,0,0,
		    1,1,1,1,1,1,0,0,
		    1,1,1,1,1,1,1,1,
		    0,0,0,0,0,0,0,0];
	} else if (code == 86) {
	    return [0,0,0,0,0,0,0,0,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,0,
		    1,1,1,1,1,1,1,0,
		    1,1,1,1,1,1,1,0,
		    1,1,1,1,1,1,1,0,
		    1,1,1,1,1,1,1,1,
		    0,0,0,0,0,0,0,0];
	} else if (code == 87) {
	    return [0,0,0,0,0,0,0,0,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,1,1,1,1,1,
		    0,0,0,0,0,0,0,0];
	} else if (code == 88) {
	    return [0,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,1,
		    0,0,0,0,0,0,0,1,
		    0,0,0,0,0,0,0,1,
		    0,0,0,0,0,0,0,1,
		    0,0,0,0,0,0,0,1,
		    0,0,0,0,0,0,0,1,
		    0,0,0,0,0,0,0,0];
	} else if (code == 89) {
	    return [0,0,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 90) {
	    return [1,0,0,0,0,0,0,1,
		    0,1,0,0,0,0,1,0,
		    0,0,1,0,0,1,0,0,
		    0,0,0,1,1,0,0,0,
		    0,0,0,1,1,0,0,0,
		    0,0,1,0,0,1,0,0,
		    0,1,0,0,0,0,1,0,
		    1,0,0,0,0,0,0,1];
	} else if (code == 91) {
	    return [0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    1,1,1,1,1,1,1,1,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0,
		    0,0,0,0,1,0,0,0];
	} else if (code == 92) {
	    return [0,0,0,1,1,0,0,0,
		    0,0,1,1,1,1,0,0,
		    1,1,0,1,1,0,1,1,
		    0,0,0,1,1,0,0,0,
		    0,0,0,1,1,0,0,0,
		    0,0,0,1,1,0,0,0,
		    0,0,0,1,1,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 93) {
	    return [0,0,0,1,1,0,0,0,
		    0,0,0,1,1,0,0,0,
		    0,0,0,1,1,0,0,0,
		    0,0,0,1,1,0,0,0,
		    1,1,0,1,1,0,1,1,
		    0,0,1,1,1,1,0,0,
		    0,0,0,1,1,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 94) {
	    return [0,0,0,1,1,0,0,0,
		    0,0,1,1,1,1,0,0,
		    1,1,0,1,1,0,1,1,
		    0,0,0,1,1,0,0,0,
		    1,1,0,1,1,0,1,1,
		    0,0,1,1,1,1,0,0,
		    0,0,0,1,1,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 95) {
	    return [1,1,1,1,1,1,1,1,
		    1,0,0,0,0,0,0,1,
		    1,0,0,0,0,0,0,1,
		    1,0,0,0,0,0,0,1,
		    1,0,0,0,0,0,0,1,
		    1,0,0,0,0,0,0,1,
		    1,0,0,0,0,0,0,1,
		    1,1,1,1,1,1,1,1];
	} else if (code == 96) {
	    return [0,0,1,1,1,1,0,0,
		    0,1,1,0,0,1,1,0,
		    0,0,0,0,0,1,1,0,
		    0,0,0,0,1,1,0,0,
		    0,0,0,1,1,0,0,0,
		    0,0,0,0,0,0,0,0,
		    0,0,0,1,1,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 97) {
	    return [1,1,0,0,0,1,0,0,
		    1,0,1,0,1,0,0,0,
		    1,0,0,1,0,0,0,0,
		    1,1,0,0,0,0,0,0,
		    1,0,1,0,0,0,0,0,
		    1,0,0,1,0,0,0,0,
		    1,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 98) {
	    return [0,1,1,0,0,0,0,0,
		    0,1,0,1,0,0,0,0,
		    0,1,0,0,1,0,0,0,
		    0,1,1,1,0,0,0,0,
		    0,1,0,0,1,0,0,0,
		    0,1,0,1,0,0,0,0,
		    0,1,1,0,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 99) {
	    return [0,0,0,1,0,0,0,0,
		    0,0,0,1,1,0,0,0,
		    0,0,0,1,0,1,0,0,
		    1,0,0,1,0,0,1,0,
		    0,1,0,1,0,0,0,0,
		    0,0,1,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 100) {
	    return [1,0,0,0,0,0,1,0,
		    1,1,0,0,0,1,1,0,
		    1,0,1,0,1,0,1,0,
		    1,0,0,1,0,0,1,0,
		    1,0,1,0,1,0,1,0,
		    1,1,0,0,0,1,1,0,
		    1,0,0,0,0,0,1,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 101) {
	    return [1,0,0,0,0,0,1,0,
		    1,1,0,0,0,1,1,0,
		    1,0,1,0,1,0,1,0,
		    1,0,0,1,0,0,1,0,
		    1,0,0,0,0,0,1,0,
		    1,0,0,0,0,0,1,0,
		    1,0,0,0,0,0,1,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 102) {
	    return [1,0,0,1,0,1,0,0,
		    1,0,1,0,1,0,0,0,
		    1,1,0,1,0,0,0,0,
		    1,0,1,0,0,0,0,0,
		    1,1,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 103) {
	    return [1,0,0,0,0,0,1,0,
		    0,1,0,0,0,1,0,0,
		    0,0,1,0,1,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,1,0,1,0,0,0,
		    0,1,0,0,0,1,0,0,
		    1,0,0,0,0,0,1,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 104) {
	    return [1,1,0,0,0,0,1,0,
		    1,0,1,0,0,0,1,0,
		    1,1,0,1,0,0,1,0,
		    1,0,1,0,1,0,1,0,
		    1,0,0,1,0,1,1,0,
		    1,0,0,0,1,0,1,0,
		    1,0,0,0,0,1,1,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 105) {
	    return [0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 106) {
	    return [0,0,0,1,0,0,0,0,
		    0,0,1,1,1,0,0,0,
		    0,1,0,1,0,1,0,0,
		    1,0,0,1,0,0,1,0,
		    0,1,0,1,0,1,0,0,
		    0,0,1,1,1,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 107) {
	    return [0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,1,1,1,0,0,0,
		    0,1,0,1,0,1,0,0,
		    1,0,0,1,0,0,1,0,
		    1,0,0,1,0,0,1,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 108) {
	    return [0,0,0,1,0,0,0,0,
		    0,0,0,1,1,0,0,0,
		    0,0,0,1,0,1,0,0,
		    0,0,0,1,0,0,1,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 109) {
	    return [1,1,0,0,0,1,1,0,
		    1,0,1,0,1,0,1,0,
		    1,0,0,1,0,0,1,0,
		    1,0,1,0,1,0,1,0,
		    1,1,0,0,0,1,1,0,
		    1,0,0,0,0,0,1,0,
		    1,0,0,0,0,0,1,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 110) {
	    return [1,0,0,1,0,0,0,0,
		    0,1,0,1,0,0,0,0,
		    0,0,1,1,1,0,0,0,
		    0,0,0,1,0,1,0,0,
		    0,0,0,1,0,0,1,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 111) {
	    return [1,1,0,0,0,1,0,0,
		    1,0,1,0,1,1,0,0,
		    1,1,0,1,0,1,0,0,
		    1,0,1,0,1,0,0,0,
		    1,0,0,1,0,0,0,0,
		    1,0,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 112) {
	    return [1,0,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0,
		    1,0,0,0,0,0,0,0,
		    1,0,0,1,0,0,0,0,
		    1,0,1,0,1,0,0,0,
		    1,1,0,0,0,1,0,0,
		    1,0,0,0,0,0,1,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 113) {
	    return [0,1,0,0,0,0,0,0,
		    0,1,0,0,0,0,0,0,
		    0,1,0,0,0,0,0,0,
		    0,1,1,1,1,0,0,0,
		    0,1,0,0,0,1,0,0,
		    0,1,0,0,0,1,0,0,
		    0,1,0,0,0,1,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 114) {
	    return [0,1,1,0,0,0,0,0,
		    0,1,0,1,0,0,0,0,
		    0,1,0,0,1,0,0,0,
		    0,1,0,1,0,0,0,0,
		    0,1,1,0,0,0,0,0,
		    0,1,0,1,0,0,0,0,
		    0,1,0,0,1,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 115) {
	    return [0,1,0,0,0,0,0,0,
		    0,1,0,0,0,1,0,0,
		    0,1,0,0,1,1,0,0,
		    0,1,0,1,0,1,0,0,
		    0,1,1,0,0,1,0,0,
		    0,1,0,0,0,1,0,0,
		    0,0,0,0,0,1,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 116) {
	    return [0,0,0,1,0,0,0,0,
		    0,0,1,1,1,0,0,0,
		    0,1,0,1,0,1,0,0,
		    1,0,0,1,0,0,1,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 117) {
	    return [0,1,1,0,0,0,0,0,
		    0,1,0,1,0,0,0,0,
		    0,1,0,0,1,0,0,0,
		    0,1,0,0,0,1,0,0,
		    0,1,0,0,0,1,0,0,
		    0,1,0,0,0,1,0,0,
		    0,1,0,0,0,1,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 118) {
	    return [0,0,0,1,0,0,0,0,
		    1,0,1,1,1,0,1,0,
		    0,1,0,1,0,1,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 119) {
	    return [0,1,1,0,0,0,0,0,
		    0,1,0,1,0,0,0,0,
		    0,1,0,0,1,0,0,0,
		    0,1,0,1,0,0,0,0,
		    0,1,1,0,0,0,0,0,
		    0,1,0,0,0,0,0,0,
		    0,1,0,0,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 120) {
	    return [1,0,0,1,0,0,1,0,
		    0,1,0,1,0,1,0,0,
		    0,0,1,1,1,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 121) {
	    return [1,1,1,0,0,0,0,0,
		    1,1,0,1,0,0,0,0,
		    1,0,1,0,1,0,0,0,
		    1,0,0,1,0,1,0,0,
		    1,0,0,1,1,0,1,0,
		    1,0,0,1,0,1,1,0,
		    1,0,0,1,0,0,1,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 122) {
	    return [0,0,0,1,0,0,0,0,
		    0,0,1,0,1,0,0,0,
		    0,1,0,0,0,1,0,0,
		    0,0,1,0,1,0,0,0,
		    0,0,0,1,0,0,0,0,
		    0,0,1,0,1,0,0,0,
		    0,1,0,0,0,1,0,0,
		    0,0,0,0,0,0,0,0];
	} else if (code == 123) {
	    return [1,1,1,0,0,1,1,1,
		    1,1,0,0,0,0,1,1,
		    0,0,1,0,0,1,0,0,
		    1,1,1,0,0,1,1,1,
		    1,1,1,0,0,1,1,1,
		    1,1,1,0,0,1,1,1,
		    1,1,1,0,0,1,1,1,
		    1,1,1,1,1,1,1,1];
	} else if (code == 124) {
	    return [1,1,1,0,0,1,1,1,
		    1,1,1,0,0,1,1,1,
		    1,1,1,0,0,1,1,1,
		    1,1,1,0,0,1,1,1,
		    0,0,1,0,0,1,0,0,
		    1,1,0,0,0,0,1,1,
		    1,1,1,0,0,1,1,1,
		    1,1,1,1,1,1,1,1];
	} else if (code == 125) {
	    return [1,1,1,0,0,1,1,1,
		    1,1,0,0,0,0,1,1,
		    0,0,1,0,0,1,0,0,
		    1,1,1,0,0,1,1,1,
		    0,0,1,0,0,1,0,0,
		    1,1,0,0,0,0,1,1,
		    1,1,1,0,0,1,1,1,
		    1,1,1,1,1,1,1,1];
	} else if (code == 126) {
	    return [1,1,0,0,0,0,1,1,
		    1,0,0,1,1,0,0,1,
		    1,1,1,1,1,0,0,1,
		    1,1,1,1,0,0,1,1,
		    1,1,1,0,0,1,1,1,
		    1,1,1,1,1,1,1,1,
		    1,1,1,0,0,1,1,1,
		    1,1,1,1,1,1,1,1];
	} else {
	    ZError.log('Unknown font 3 code: ' + code );
	    return [0,0,0,0,0,0,0,0,
		    0,1,1,1,1,1,1,0,
		    0,1,0,0,0,0,1,0,
		    0,1,0,0,0,0,1,0,
		    0,1,0,0,0,0,1,0,
		    0,1,0,0,0,0,1,0,
		    0,1,1,1,1,1,1,0,
		    0,0,0,0,0,0,0,0];
	}
    }
};
